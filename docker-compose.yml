x-airflow-common:
  &airflow-common
  environment:
    &airflow-common-env
    AIRFLOW__CORE__LOAD_EXAMPLES: "false"
    AIRFLOW__CORE__EXECUTOR: "LocalExecutor"
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: false
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: "postgresql://airflow:airflow@postgres:5432/airflow"
    MLFLOW_TRACKING_URI: http://mlflow:5000
    AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW_SECRET_KEY}
  volumes:
    - ./dags:/opt/airflow/dags
    - ./src:/opt/airflow/src
    - ./data:/opt/airflow/data
    - ./config.yaml:/opt/airflow/config.yaml:ro
    - mlflow_artifacts:/mlflow_artifacts
  user: "${AIRFLOW_UID:-50000}:0"

services:
  mlflow_artifacts-init:
    image: alpine
    command: ["chmod", "o+w", "/mlflow_artifacts"]
    volumes:
      - mlflow_artifacts:/mlflow_artifacts
    restart: no

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: mlflow
      POSTGRES_PASSWORD: mlflow
      POSTGRES_DB: mlflow
      POSTGRES_MULTIPLE_DATABASES: airflow
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./scripts/init-multiple-databases.sh:/docker-entrypoint-initdb.d/init-multiple-databases.sh:ro
    restart: unless-stopped

  mlflow:
    build:
      context: .
      dockerfile: docker/mlflow.Dockerfile
    environment:
      BACKEND_STORE_URI: postgresql://mlflow:mlflow@postgres:5432/mlflow
      ARTIFACT_ROOT: /mlflow_artifacts
    ports:
      - "5000:5000"
    volumes:
      - ./mlruns:/mlruns
      - mlflow_artifacts:/mlflow_artifacts
    depends_on:
      - postgres
    restart: unless-stopped

  fastapi:
    build:
      context: .
      dockerfile: docker/fastapi.Dockerfile
    environment:
      MLFLOW_TRACKING_URI: http://mlflow:5000
    ports:
      - "8000:8000"
    volumes:
      - ./artifacts:/app/artifacts
      - ./config.yaml:/app/config.yaml:ro
      - ./src:/app/src
      - mlflow_artifacts:/mlflow_artifacts
    depends_on:
      - mlflow
    restart: unless-stopped

  airflow-init:
    <<: *airflow-common
    build:
      context: .
      dockerfile: docker/airflow.Dockerfile
    command: >
      bash -c "
      airflow db init &&
      airflow users create
      --username admin
      --firstname Admin
      --lastname User
      --role Admin
      --email admin@example.com
      --password admin
      "
    depends_on:
      - postgres
      - mlflow_artifacts-init
    restart: "no"

  airflow-webserver:
    <<: *airflow-common
    build:
      context: .
      dockerfile: docker/airflow.Dockerfile
    command: ["airflow", "webserver", "--port", "8080"]
    environment:
      <<: *airflow-common-env
      AIRFLOW__WEBSERVER__RBAC: "true"
    ports:
      - "8080:8080"
    depends_on:
      - airflow-init
      - mlflow
    restart: unless-stopped

  airflow-scheduler:
    <<: *airflow-common
    build:
      context: .
      dockerfile: docker/airflow.Dockerfile
    command: ["airflow", "scheduler"]
    depends_on:
      - airflow-init
      - airflow-webserver
    restart: unless-stopped

volumes:
  pgdata:
  mlflow_artifacts:
